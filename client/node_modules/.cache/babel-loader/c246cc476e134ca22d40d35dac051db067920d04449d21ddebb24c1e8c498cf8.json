{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\n\n//define interface for typescript\n\nconst useNetworkStore = create(set => ({\n  isOnline: false,\n  checkIfOnline: async () => {\n    try {\n      const response = await axios.get(\"https://1.1.1.1/cdn-cgi/trace\");\n      if (response.status === 200) {\n        set({\n          isOnline: true\n        });\n      } else {\n        set({\n          isOnline: false\n        });\n      }\n    } catch (err) {\n      set({\n        isOnline: false\n      });\n    }\n  }\n}));\nexport default useNetworkStore;","map":{"version":3,"names":["create","axios","useNetworkStore","set","isOnline","checkIfOnline","response","get","status","err"],"sources":["C:/Users/63999/OneDrive/Desktop/mern-projects/property-rental/client/src/store/useNetworkStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\n//define interface for typescript\r\ninterface NetworkState {\r\n    isOnline: boolean,\r\n    checkIfOnline: () => Promise<void>\r\n}\r\n\r\nconst useNetworkStore = create<NetworkState>((set) => ({\r\n    isOnline: false,\r\n    checkIfOnline: async () => {\r\n        try {\r\n            const response = await axios.get(\"https://1.1.1.1/cdn-cgi/trace\");\r\n\r\n            if (response.status === 200) {\r\n                set({ isOnline: true })\r\n            } else {\r\n                set({ isOnline: false })\r\n            }\r\n        } catch (err) {\r\n            set({ isOnline: false })\r\n        }\r\n    }\r\n}));\r\n\r\nexport default useNetworkStore\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAMA,MAAMC,eAAe,GAAGF,MAAM,CAAgBG,GAAG,KAAM;EACnDC,QAAQ,EAAE,KAAK;EACfC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,+BAA+B,CAAC;MAEjE,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBL,GAAG,CAAC;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MAC3B,CAAC,MAAM;QACHD,GAAG,CAAC;UAAEC,QAAQ,EAAE;QAAM,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;MACVN,GAAG,CAAC;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC;IAC5B;EACJ;AACJ,CAAC,CAAC,CAAC;AAEH,eAAeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}